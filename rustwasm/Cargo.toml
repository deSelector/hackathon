[package]
name = "rustwasm"
version = "0.1.0"
authors = ["deSelector <deselectors@gmail.com>"]
edition = "2018"
description = "hackathon demo"
license = "MIT OR Apache-2.0"
repository = "https://github.com/deSelector/hackathon/"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
js-sys = "0.3.50"
wasm-bindgen ={ version= "0.2.63", features=["serde-serialize"]}
getrandom = { version = "0.2", features = ["js"] }
more-asserts = "0.2"
enum-iterator = "0.6.0"
chrono = "0.4"
serde_json="1.0.59"
serde_repr="0.1.7"
serde={version="1.0.117", features=["derive"]}
byteorder="1.4.3"
# rand= "^0.8.0"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

[dependencies.web-sys]
version = "0.3.4"
features = [
  'console',
  'CanvasRenderingContext2d',
  'TextMetrics',
  'Document',
  'Element',
  'HtmlCanvasElement',
  'Window',
  'Performance',
  'PerformanceTiming',
]